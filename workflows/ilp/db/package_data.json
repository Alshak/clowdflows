[
  {
    "pk": 14,
    "model": "workflows.category",
    "fields": {
      "uid": "ed859be5-cc13-46b9-b249-c8f026732c1c",
      "parent": null,
      "workflow": null,
      "user": null,
      "order": 1,
      "name": "ILP"
    }
  },
  {
    "pk": 75,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 14,
      "treeview_image": "",
      "name": "Aleph",
      "is_streaming": false,
      "uid": "b8289304-389e-414a-98ab-273b16478cee",
      "interaction_view": "",
      "image": "",
      "package": "ilp",
      "static_image": "ilp.png",
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "action": "ilp_aleph",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": ""
    }
  },
  {
    "pk": 108,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "mode",
      "short_name": "mod",
      "uid": "00b174f3-250d-4c47-9a60-b515e5260e0c",
      "default": "induce",
      "required": true,
      "multi": false,
      "parameter_type": "select",
      "variable": "mode",
      "parameter": true,
      "order": 2,
      "description": "induction mode"
    }
  },
  {
    "pk": 51,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "8e5631e5-6497-4720-9e26-5936619caf5c",
      "abstract_input": 108,
      "value": "induce",
      "name": "induce"
    }
  },
  {
    "pk": 52,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "92f66b17-02fd-4bb6-b4cb-03bb54b403f6",
      "abstract_input": 108,
      "value": "induce_constraints",
      "name": "induce_constraints"
    }
  },
  {
    "pk": 53,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "ce82b005-81e4-4997-80c3-05731651869a",
      "abstract_input": 108,
      "value": "induce_cover",
      "name": "induce_cover"
    }
  },
  {
    "pk": 54,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "968d079a-871c-4cae-b15e-c8e7b61f3b8c",
      "abstract_input": 108,
      "value": "induce_features",
      "name": "induce_features"
    }
  },
  {
    "pk": 55,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "0103c466-0e2e-47fe-b182-0a034beb7eed",
      "abstract_input": 108,
      "value": "induce_max",
      "name": "induce_max"
    }
  },
  {
    "pk": 56,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "78cb938d-16b8-4c7c-b712-b59e27aa837d",
      "abstract_input": 108,
      "value": "induce_modes",
      "name": "induce_modes"
    }
  },
  {
    "pk": 57,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "45f5cc84-b097-439a-9363-d2299c540913",
      "abstract_input": 108,
      "value": "induce_tree",
      "name": "induce_tree"
    }
  },
  {
    "pk": 109,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "pos",
      "short_name": "pos",
      "uid": "03788382-f3b9-4580-8e85-b600874ef643",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": null,
      "variable": "pos",
      "parameter": false,
      "order": 3,
      "description": "positive examples"
    }
  },
  {
    "pk": 110,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "neg",
      "short_name": "neg",
      "uid": "01529349-3300-41c5-8585-3f7a90175120",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": null,
      "variable": "neg",
      "parameter": false,
      "order": 4,
      "description": "negative examples"
    }
  },
  {
    "pk": 111,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "b",
      "short_name": "b",
      "uid": "2ec81e9e-d911-46a1-a95d-2eaf349443a8",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": null,
      "variable": "b",
      "parameter": false,
      "order": 5,
      "description": "background knowledge"
    }
  },
  {
    "pk": 112,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "settings",
      "short_name": "set",
      "uid": "bfe16b08-89b1-4835-875c-6b0302fb1da3",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "settings",
      "parameter": false,
      "order": 6,
      "description": "settings facts"
    }
  },
  {
    "pk": 113,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "minpos",
      "short_name": "mps",
      "uid": "cdeaa39a-7eeb-40eb-9443-8519cb841d2e",
      "default": "1",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "minpos",
      "parameter": true,
      "order": 7,
      "description": "Set a lower bound on the number of positive examples to be covered by an acceptable clause. If the best clause covers positive examples below this number, then it is not added to the current theory. This can be used to prevent Aleph from adding ground unit clauses to the theory (by setting the value to 2)."
    }
  },
  {
    "pk": 114,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "noise",
      "short_name": "noi",
      "uid": "61292a9b-ff5b-4a7e-8baf-e6810cb50dcd",
      "default": "0",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "noise",
      "parameter": true,
      "order": 8,
      "description": "Set an upper bound on the number of negative examples allowed to be covered by an acceptable clause."
    }
  },
  {
    "pk": 115,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "clauselength",
      "short_name": "cln",
      "uid": "546d3a62-b499-4e61-a9b1-4f89f24ba01f",
      "default": "4",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "clauselength",
      "parameter": true,
      "order": 9,
      "description": " Sets upper bound on number of literals in an acceptable clause."
    }
  },
  {
    "pk": 116,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "depth",
      "short_name": "dpt",
      "uid": "3541b804-e8f3-42c5-b022-c0b7a51f05e1",
      "default": "10",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "depth",
      "parameter": true,
      "order": 10,
      "description": "Sets an upper bound on the proof depth to which theorem-proving proceeds."
    }
  },
  {
    "pk": 117,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "evalfn",
      "short_name": "efn",
      "uid": "27ed0924-8fa9-4cad-b033-c0a98db9f366",
      "default": "coverage",
      "required": false,
      "multi": false,
      "parameter_type": "select",
      "variable": "evalfn",
      "parameter": true,
      "order": 11,
      "description": "Sets the evaluation function for a search."
    }
  },
  {
    "pk": 134,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "abd779d2-8276-4b2d-909d-2b6053d1f30f",
      "abstract_input": 117,
      "value": "accuracy",
      "name": "accuracy"
    }
  },
  {
    "pk": 135,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "2ec2f418-657b-44f7-a420-83cb4f4baed5",
      "abstract_input": 117,
      "value": "auto_m",
      "name": "auto_m"
    }
  },
  {
    "pk": 136,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "66261b29-3313-4f85-b8ab-f277e49eb40b",
      "abstract_input": 117,
      "value": "compression",
      "name": "compression"
    }
  },
  {
    "pk": 137,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "427cd0aa-6d3c-457e-8762-cdc7ec6b8512",
      "abstract_input": 117,
      "value": "coverage",
      "name": "coverage"
    }
  },
  {
    "pk": 138,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "bdf9d407-95af-4b42-b923-a027c45b0f26",
      "abstract_input": 117,
      "value": "entropy",
      "name": "entropy"
    }
  },
  {
    "pk": 139,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "ddc2bde8-7143-4e8f-9e6b-cdcaea871e27",
      "abstract_input": 117,
      "value": "gini",
      "name": "gini"
    }
  },
  {
    "pk": 140,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "0c4fd002-57a6-40b5-ac0f-e98cc62aa957",
      "abstract_input": 117,
      "value": "laplace",
      "name": "laplace"
    }
  },
  {
    "pk": 141,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "2d764051-9dca-42f2-b131-2a87576c21d7",
      "abstract_input": 117,
      "value": "mestimate",
      "name": "mestimate"
    }
  },
  {
    "pk": 142,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "0684bf39-09a5-4499-8939-51a58fcc2446",
      "abstract_input": 117,
      "value": "pbayes",
      "name": "pbayes"
    }
  },
  {
    "pk": 143,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "ecfbee4f-ce81-40ed-80a2-d53e04e9c7d3",
      "abstract_input": 117,
      "value": "posonly",
      "name": "posonly"
    }
  },
  {
    "pk": 144,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "775058c3-7763-4af7-bcf4-b629d1c0e6f1",
      "abstract_input": 117,
      "value": "sd",
      "name": "sd"
    }
  },
  {
    "pk": 145,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "14e08667-f530-43e6-b932-b8e2ac394ea4",
      "abstract_input": 117,
      "value": "wracc",
      "name": "wracc"
    }
  },
  {
    "pk": 118,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "i",
      "short_name": "i",
      "uid": "48905a20-0192-40c0-82de-2389e8fdc88e",
      "default": "2",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "i",
      "parameter": true,
      "order": 12,
      "description": "Set upper bound on layers of new variables."
    }
  },
  {
    "pk": 119,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "language",
      "short_name": "lan",
      "uid": "9de49bde-7518-4116-8606-eccc134d1d8f",
      "default": "inf",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "language",
      "parameter": true,
      "order": 13,
      "description": "Specifies the number of occurences of a predicate symbol in any clause (inf or > 0)."
    }
  },
  {
    "pk": 120,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "m",
      "short_name": "m",
      "uid": "b07b2b85-bc8f-4dfc-aaf8-800b94077312",
      "default": "1",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "m",
      "parameter": true,
      "order": 14,
      "description": "Sets a value for \"m-estimate\" calculations."
    }
  },
  {
    "pk": 121,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 75,
      "name": "max_features",
      "short_name": "mxf",
      "uid": "4a275a37-e6bc-4b22-816d-b45e2ac791e2",
      "default": "inf",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "max_features",
      "parameter": true,
      "order": 15,
      "description": "Sets an upper bound on the maximum number of boolean features constructed by searching for good clauses (inf or > 0)."
    }
  },
  {
    "pk": 79,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 75,
      "name": "theory",
      "short_name": "the",
      "variable": "theory",
      "uid": "d1d8839b-a2f1-4b82-b759-7c6c7d7d57e5",
      "order": 1,
      "description": "theory"
    }
  },
  {
    "pk": 76,
    "model": "workflows.abstractwidget",
    "fields": {
      "category": 14,
      "treeview_image": "",
      "name": "RSD",
      "is_streaming": false,
      "uid": "dabcb4ed-ae86-4f3e-8d3e-bb0306ff11f8",
      "interaction_view": "",
      "image": "",
      "package": "ilp",
      "static_image": "ilp.png",
      "post_interact_action": "",
      "user": null,
      "visualization_view": "",
      "action": "ilp_rsd",
      "wsdl_method": "",
      "wsdl": "",
      "interactive": false,
      "has_progress_bar": false,
      "order": 1,
      "description": "Relational subgroup discovery by Zelezny et al."
    }
  },
  {
    "pk": 122,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "examples",
      "short_name": "ex",
      "uid": "817a82dc-2264-4181-a31a-6a7ff2b6c882",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "examples",
      "parameter": false,
      "order": 1,
      "description": "classified examples (pos+neg in one file)"
    }
  },
  {
    "pk": 123,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "b",
      "short_name": "b",
      "uid": "746dac3a-bcf9-4546-b0cb-ccfea866707a",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": null,
      "variable": "b",
      "parameter": false,
      "order": 2,
      "description": "background knowledge"
    }
  },
  {
    "pk": 124,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "clauselength",
      "short_name": "cln",
      "uid": "d840e1d9-5bd1-4004-94ec-6acd5b3c9910",
      "default": "8",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "clauselength",
      "parameter": true,
      "order": 2,
      "description": "An integer specifying the maximum length of a feature\r\nbody."
    }
  },
  {
    "pk": 125,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "pos",
      "short_name": "pos",
      "uid": "676ef826-7dd9-415a-8a8a-d82146dcc95a",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "pos",
      "parameter": false,
      "order": 3,
      "description": "positive examples"
    }
  },
  {
    "pk": 126,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "depth",
      "short_name": "dpt",
      "uid": "bed46927-aa71-46a4-9022-8219cd2f59ca",
      "default": "4",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "depth",
      "parameter": true,
      "order": 3,
      "description": "An integer specifying the maximum depth of variables\r\nfound in a feature body."
    }
  },
  {
    "pk": 127,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "neg",
      "short_name": "neg",
      "uid": "0b46921d-50fe-46b1-a1e4-67c918160a7f",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "neg",
      "parameter": false,
      "order": 4,
      "description": "negative examples"
    }
  },
  {
    "pk": 128,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "negation",
      "short_name": "neg",
      "uid": "bfff50a5-ed9b-4e3f-bfb0-e6d135a60f38",
      "default": "none",
      "required": false,
      "multi": false,
      "parameter_type": "select",
      "variable": "negation",
      "parameter": true,
      "order": 4,
      "description": "One of now, later, none.\r\nnow: To features generated by featurize.pl, process.pl\r\nwill also add their versions where the complete body is\r\nnegated. (Negations of individual literals can be done by\r\nsuitably defining background knowledge predicates.)\r\nlater: tells the program that an inducer capable of\r\nnegating features will be applied on the propositionalized\r\nrepresentation. This influences functions described below."
    }
  },
  {
    "pk": 146,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "45656c1d-a666-4689-a37d-79a7d3b9c603",
      "abstract_input": 128,
      "value": "later",
      "name": "later"
    }
  },
  {
    "pk": 147,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "230d9101-6512-4f09-8a83-727be3fa4c74",
      "abstract_input": 128,
      "value": "none",
      "name": "none"
    }
  },
  {
    "pk": 148,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "79eec714-165c-4d67-9eb5-8f0ebe9a374f",
      "abstract_input": 128,
      "value": "now",
      "name": "now"
    }
  },
  {
    "pk": 129,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "settings",
      "short_name": "set",
      "uid": "a1660c9f-952d-4f29-9f23-9b0be5fe8cea",
      "default": "",
      "required": false,
      "multi": false,
      "parameter_type": null,
      "variable": "settings",
      "parameter": false,
      "order": 5,
      "description": "settings"
    }
  },
  {
    "pk": 130,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "min_coverage",
      "short_name": "mcv",
      "uid": "0864df0d-3e46-4af2-9ea3-2ccbfe33034a",
      "default": "1",
      "required": false,
      "multi": false,
      "parameter_type": "text",
      "variable": "min_coverage",
      "parameter": true,
      "order": 5,
      "description": "An integer mc. All features (including negated versions)\r\ncovering fewer than mc instances will be discarded.\r\nHowever, if negation is later (see above), a feature\r\nis discarded only if both (a) coverage thereof and (b) the\r\ncoverage of its negated version are smaller than mc."
    }
  },
  {
    "pk": 131,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "filtering",
      "short_name": "flt",
      "uid": "f510c2a1-454f-4ef8-b346-aba39a41ce24",
      "default": "true",
      "required": false,
      "multi": false,
      "parameter_type": "select",
      "variable": "flt",
      "parameter": true,
      "order": 6,
      "description": "One of true, false. If true, each feature will be discarded\r\nif (a) it covers the same set of instances as some previously\r\nconstructed feature, or (b) it covers all instances."
    }
  },
  {
    "pk": 149,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "56d3293d-9d78-437e-821d-e478018e1988",
      "abstract_input": 131,
      "value": "false",
      "name": "false"
    }
  },
  {
    "pk": 150,
    "model": "workflows.abstractoption",
    "fields": {
      "uid": "1b3a141e-2da8-4e58-9e2d-4055ee8e8470",
      "abstract_input": 131,
      "value": "true",
      "name": "true"
    }
  },
  {
    "pk": 132,
    "model": "workflows.abstractinput",
    "fields": {
      "widget": 76,
      "name": "subgroups",
      "short_name": "sg",
      "uid": "1c982c21-0b97-40d1-a35e-30ba16342b00",
      "default": "",
      "required": true,
      "multi": false,
      "parameter_type": "checkbox",
      "variable": "subgroups",
      "parameter": true,
      "order": 11,
      "description": "find subgroups as well"
    }
  },
  {
    "pk": 80,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 76,
      "name": "features",
      "short_name": "frs",
      "variable": "features",
      "uid": "1097065e-83f9-4dfa-89b8-775d500caa89",
      "order": 1,
      "description": "features as prolog facts"
    }
  },
  {
    "pk": 81,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 76,
      "name": "arff",
      "short_name": "arf",
      "variable": "arff",
      "uid": "20b53049-5a43-46f8-9d1d-b49d8db2b1bc",
      "order": 2,
      "description": "arff file of the propositionalized data"
    }
  },
  {
    "pk": 82,
    "model": "workflows.abstractoutput",
    "fields": {
      "widget": 76,
      "name": "rules",
      "short_name": "rul",
      "variable": "rules",
      "uid": "3f70b720-fd68-4770-936b-68512046a12e",
      "order": 3,
      "description": "rules as prolog facts"
    }
  }
]